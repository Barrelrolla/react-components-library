import{j as n}from"./jsx-runtime-D_zvdyIk.js";import{a as f,t,c as i}from"./ThemeContext-CzQ_9dh3.js";import{B as h}from"./Button-B4yJPE4L.js";import"./ButtonGroup-KAUQFKNT.js";function y({isOpen:e,transitions:s,className:r}){const l=f(),o=(!l||l.transitions)&&s,u=t("group px-1 py-0",r),m=t("hamburger"),a=t("hamburger-line",o&&"transition-all"),d=t(a,e&&"origin-top-right -translate-x-1 -rotate-45"),p=t(a,"translate-y-2",e&&"opacity-0"),c=t(a,"translate-y-4",e&&"origin-bottom-right -translate-x-1 rotate-45");return{button:u,container:m,topLine:d,midLine:p,botLine:c}}function b({color:e="main",transitions:s=!0,isOpen:r=!1,style:l,className:o,...u}){const{button:m,container:a,topLine:d,midLine:p,botLine:c}=y({isOpen:r,transitions:s,className:o});return n.jsx(h,{"aria-label":"navigation toggle",variant:"ghost",ghostHover:"none",style:{...i(e),...l},color:e,className:m,...u,children:n.jsxs("div",{className:a,children:[n.jsx("span",{style:{...i(e)},className:d}),n.jsx("span",{style:{...i(e)},className:p}),n.jsx("span",{style:{...i(e)},className:c})]})})}b.__docgenInfo={description:"",methods:[],displayName:"HamburgerButton",props:{isOpen:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},color:{required:!1,tsType:{name:"union",raw:`| "main"\r
| "light"\r
| "dark"\r
| "primary"\r
| "secondary"\r
| "accent"\r
| "info"\r
| "success"\r
| "warning"\r
| "error"`,elements:[{name:"literal",value:'"main"'},{name:"literal",value:'"light"'},{name:"literal",value:'"dark"'},{name:"literal",value:'"primary"'},{name:"literal",value:'"secondary"'},{name:"literal",value:'"accent"'},{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'},{name:"literal",value:'"error"'}]},description:"Color of the button. If none is chosen it will be Primary.",defaultValue:{value:'"main"',computed:!1}},variant:{required:!1,tsType:{name:"union",raw:'"solid" | "outline" | "ghost"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"outline"'},{name:"literal",value:'"ghost"'}]},description:"Button variant. If none is set it will be solid."},size:{required:!1,tsType:{name:"union",raw:'"xs" | "sm" | "md" | "lg" | "xl"',elements:[{name:"literal",value:'"xs"'},{name:"literal",value:'"sm"'},{name:"literal",value:'"md"'},{name:"literal",value:'"lg"'},{name:"literal",value:'"xl"'}]},description:"Button size. If none is set it will be md."},radius:{required:!1,tsType:{name:"union",raw:'"default" | "none" | "pill"',elements:[{name:"literal",value:'"default"'},{name:"literal",value:'"none"'},{name:"literal",value:'"pill"'}]},description:"Button radius. If non is set it will use the theme's default."},ghostHover:{required:!1,tsType:{name:"union",raw:'"none" | "fill" | "outline" | "contrasting"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"fill"'},{name:"literal",value:'"outline"'},{name:"literal",value:'"contrasting"'}]},description:"If the button variant is `ghost` you can select the hover type."},retainFocusState:{required:!1,tsType:{name:"boolean"},description:"By default, while the button is fouced, it will retain it's hover state, meaning an outline or ghost button will remain solid for example. Set to false if you don't want that behaviour."},scaling:{required:!1,tsType:{name:"boolean"},description:"By default buttons scale on press. Set to false if you don't want that."},transitions:{required:!1,tsType:{name:"boolean"},description:"Disable  animations by setting to false. By default it uses the theme setting.",defaultValue:{value:"true",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:"Used to disable the button"},selected:{required:!1,tsType:{name:"boolean"},description:"In a button group for example, you can set this property to the currently selected button."},loading:{required:!1,tsType:{name:"boolean"},description:"Set to true when submitting a form for example. The button will show a loading indicator."},loadingPosition:{required:!1,tsType:{name:"union",raw:'"front" | "end"',elements:[{name:"literal",value:'"front"'},{name:"literal",value:'"end"'}]},description:"If the loading indicator should be shown in the start or end of the button"},startIcon:{required:!1,tsType:{name:"SVGProps",elements:[{name:"SVGSVGElement"}],raw:"SVGProps<SVGSVGElement>"},description:"Start icon. You can just pass an icon in the children, but using this prop will automatically replace that icon for a loading one if the `loading` prop is set to `true`"},endIcon:{required:!1,tsType:{name:"SVGProps",elements:[{name:"SVGSVGElement"}],raw:"SVGProps<SVGSVGElement>"},description:"Same as start icon, but at the end."},wrapperClasses:{required:!1,tsType:{name:"string"},description:"The button is wrapped in a div to change the cursor when disabled. If you need to pass any classes to that div, you can do so with this prop."},as:{required:!1,tsType:{name:"T"},description:"The html element (or other component) the component should be rendered as"},ref:{required:!1,tsType:{name:"RefObject",elements:[{name:"union",raw:"ElementTypeMap<T> | null",elements:[{name:"unknown"},{name:"null"}]}],raw:"RefObject<ElementTypeMap<T> | null>"},description:""}}};export{b as H};
